name: i18n Automation and Preview Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'QA_TRANSLATION_REPORT.md'
      - 'src/locales/**/*.json'
    # 1. MELHORIA: EXCLUI COMMITS DO BOT PARA EVITAR LOOPS INFINITOS
    exclude:
      branches:
        - 'chore/i18n-auto-fixes' # Caso o Peter Evans action fosse mantido
      commits:
        - message: 'chore(i18n): Apply automated translation fixes from QA report' # Mensagem de commit do bot
  pull_request:
    branches:
      - main
    paths:
      - 'QA_TRANSLATION_REPORT.md'
      - 'src/locales/**/*.json'

jobs:
  automate-i18n-and-deploy:
    # Nome da job ajustado para refletir as duas etapas (corre√ß√£o e deploy)
    runs-on: ubuntu-latest
    
    permissions:
      contents: write 
      pull-requests: write 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. MELHORIA: SETUP OTIMIZADO PARA NODE/PNPM E CACHE
    - name: Set up Node.js with pnpm
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm' # Adiciona cache para pnpm
        cache-dependency-path: 'pnpm-lock.yaml' # Assumindo pnpm-lock.yaml

    # 2. MELHORIA: ESPECIFICAR VERS√ÉO DO PYTHON
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Vers√£o espec√≠fica para estabilidade

    # 3. REMOVIDO: A instala√ß√£o global do pnpm n√£o √© mais necess√°ria

    - name: Install Python dependencies
      run: pip install -r requirements.txt

    - name: Parse QA Report and Generate Corrections
      id: parse_report
      run: python scripts/parse_qa_report.py > corrections.json

    # 4. MELHORIA: PASSAGEM ROBUSTA DE JSON (caso seja multi-linha)
    - name: Load Corrections
      id: load_corrections
      run: |
        echo "corrections<<EOF" >> $GITHUB_OUTPUT
        cat corrections.json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Update Translation Files
      run: python scripts/update_translations.py '${{ steps.load_corrections.outputs.corrections }}'

    - name: Update QA Report Status
      run: python scripts/update_report_status.py '${{ steps.load_corrections.outputs.corrections }}'

    # 5. MELHORIA: UNIFICA√á√ÉO DA L√ìGICA DE COMMIT
    # Esta a√ß√£o tentar√° commitar e fazer push tanto em PRs quanto em Push para main.
    # O if foi simplificado, pois o bot n√£o far√° commit se n√£o houver altera√ß√µes.
    - name: Commit and Push Automated Changes
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "chore(i18n): Apply automated translation fixes from QA report"
        file_pattern: |
          src/locales/**/*.json # Padr√£o mais gen√©rico (incluindo o en/translation.json)
          QA_TRANSLATION_REPORT.md
        commit_user_name: "GitHub Actions Bot"
        commit_user_email: "github-actions[bot]@users.noreply.github.com"
        # O action j√° verifica se a execu√ß√£o √© em PR ou branch.

    # 6. MELHORIA: GARANTIR QUE O BUILD USE AS CORRE√á√ïES
    # As a√ß√µes de instala√ß√£o e build agora s√£o logicamente o in√≠cio da fase de Deploy.
    - name: Install project dependencies
      run: pnpm install

    - name: Build project
      run: pnpm run build

    - name: Deploy to Netlify (Preview/Production)
      uses: nwtgck/actions-netlify@v2.0
      id: netlify_deploy
      with:
        publish-dir: './dist'
        # O Netlify action √© inteligente: em PR, ele faz preview; em main, faz production.
        production-branch: 'main' 
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: 'Deploy from GitHub Actions'
        enable-pull-request-comment: true
        enable-commit-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    # FASE DE NOTIFICA√á√ÉO (Sem altera√ß√µes significativas, pois j√° est√° boa)

    - name: Comment on PR with Preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const deploymentUrl = '${{ steps.netlify_deploy.outputs.deploy-url }}';
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `‚ú® **Preview da Landing Page com i18n:**\n\nSeu Pull Request foi automaticamente processado e um preview est√° dispon√≠vel em: ${deploymentUrl}\n\nPor favor, revise as tradu√ß√µes e o layout. O relat√≥rio de QA foi processado e as corre√ß√µes foram aplicadas.`
          });

    - name: Send Slack Notification for PR
      if: success() && github.event_name == 'pull_request'
      uses: slackapi/slack-github-action@v1.26.0
      with:
        channel-id: 'C09GWHJES04'
        payload: |
          {
            "text": "üöÄ Preview de i18n pronto para revis√£o!",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Pull Request <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}> de *${{ github.actor }}* foi processado.\n\n‚ú® *Preview dispon√≠vel em:* ${{ steps.netlify_deploy.outputs.deploy-url }}"
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    - name: Notify on Push with Production URL
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/github-script@v6
      with:
        script: |
          const deploymentUrl = '${{ steps.netlify_deploy.outputs.deploy-url }}';
          console.log(`‚ú® **Deploy em Produ√ß√£o da Landing Page com i18n:**\n\nA branch principal foi atualizada e um novo deploy est√° dispon√≠vel em: ${deploymentUrl}\n\nO relat√≥rio de QA foi processado e as corre√ß√µes foram aplicadas.`);

    - name: Send Slack Notification for Push to Main
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: slackapi/slack-github-action@v1.26.0
      with:
        channel-id: 'C09GWHJES04'
        payload: |
          {
            "text": "‚úÖ Deploy em produ√ß√£o conclu√≠do!",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "A branch \`main\` foi atualizada por *${{ github.actor }}*.\n\nüöÄ *Deploy em produ√ß√£o dispon√≠vel em:* ${{ steps.netlify_deploy.outputs.deploy-url }}"
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}