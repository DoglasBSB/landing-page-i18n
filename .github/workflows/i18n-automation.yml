name: i18n Automation and Preview Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'QA_TRANSLATION_REPORT.md'
      - 'src/locales/**/*.json'
  pull_request:
    branches:
      - main
    paths:
      - 'QA_TRANSLATION_REPORT.md'
      - 'src/locales/**/*.json'

jobs:
  automate-i18n:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install Python dependencies
      run: pip install -r requirements.txt
      working-directory: ./landing-page-i18n

    - name: Parse QA Report and Generate Corrections
      id: parse_report
      run: python scripts/parse_qa_report.py > corrections.json
      working-directory: ./landing-page-i18n

    - name: Load Corrections
      id: load_corrections
      run: echo "corrections=$(cat corrections.json)" >> $GITHUB_OUTPUT
      working-directory: ./landing-page-i18n

    - name: Update Translation Files
      run: python scripts/update_translations.py "${{ steps.load_corrections.outputs.corrections }}"
      working-directory: ./landing-page-i18n

    - name: Commit and Push Changes (for PRs)
      if: github.event_name == 'pull_request'
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "chore(i18n): Apply automated translation fixes from QA report"
        file_pattern: landing-page-i18n/src/locales/en/translation.json
        commit_user_name: "GitHub Actions Bot"
        commit_user_email: "github-actions[bot]@users.noreply.github.com"

    - name: Create Pull Request with Changes (for main branch)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "fix(i18n): Apply automated translation fixes from QA report"
        title: "ü§ñ [i18n] Automated Translation Fixes"
        body: |
          This PR was automatically generated by the i18n workflow.
          It contains translation fixes based on the latest `QA_TRANSLATION_REPORT.md`.

          Please review and merge.
        branch: "chore/i18n-auto-fixes"
        base: "main"
        delete-branch: true
        add-paths: |
          landing-page-i18n/src/locales/en/translation.json

    - name: Install project dependencies
      run: pnpm install
      working-directory: ./landing-page-i18n

    - name: Build project
      run: pnpm run build
      working-directory: ./landing-page-i18n

    - name: Deploy to Netlify (Preview)
      uses: nwtgck/actions-netlify@v2.0
      id: netlify_deploy # Adiciona um ID para referenciar os outputs
      with:
        publish-dir: './landing-page-i18n/dist'
        production-branch: 'main'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: 'Deploy from GitHub Actions'
        enable-pull-request-comment: true
        enable-commit-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    - name: Comment on PR with Preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const deploymentUrl = '${{ steps.netlify_deploy.outputs.deploy-url }}';
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `‚ú® **Preview da Landing Page com i18n:**\n\nSeu Pull Request foi automaticamente processado e um preview est√° dispon√≠vel em: ${deploymentUrl}\n\nPor favor, revise as tradu√ß√µes e o layout. O relat√≥rio de QA foi processado e as corre√ß√µes foram aplicadas.`
          });

    - name: Send Slack Notification for PR
      if: success() && github.event_name == 'pull_request'
      uses: slackapi/slack-github-action@v1.26.0
      with:
        channel-id: 'C09GWHJES04' # Substitua pelo ID do seu canal
        payload: |
          {
            "text": "üöÄ Preview de i18n pronto para revis√£o!",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Pull Request <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}> de *${{ github.actor }}* foi processado.\n\n‚ú® *Preview dispon√≠vel em:* ${{ steps.netlify_deploy.outputs.deploy-url }}"
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    - name: Notify on Push with Production URL
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/github-script@v6
      with:
        script: |
          const deploymentUrl = '${{ steps.netlify_deploy.outputs.deploy-url }}';
          console.log(`‚ú® **Deploy em Produ√ß√£o da Landing Page com i18n:**\n\nA branch principal foi atualizada e um novo deploy est√° dispon√≠vel em: ${deploymentUrl}\n\nO relat√≥rio de QA foi processado e as corre√ß√µes foram aplicadas.`);

    - name: Send Slack Notification for Push to Main
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: slackapi/slack-github-action@v1.26.0
      with:
        channel-id: 'C09GWHJES04' # Substitua pelo ID do seu canal
        payload: |
          {
            "text": "‚úÖ Deploy em produ√ß√£o conclu√≠do!",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "A branch `main` foi atualizada por *${{ github.actor }}*.\n\nüöÄ *Deploy em produ√ß√£o dispon√≠vel em:* ${{ steps.netlify_deploy.outputs.deploy-url }}"
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
